// Code generated by protoc-gen-go.
// source: proto/owlquery/owlapi.proto
// DO NOT EDIT!

/*
Package owlapi is a generated protocol buffer package.

It is generated from these files:
	proto/owlquery/owlapi.proto

It has these top-level messages:
	QueryInput
	QueryReply
*/
package owlapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// query string that will send to server
type QueryInput struct {
	StartTs       int32  `protobuf:"varint,1,opt,name=startTs" json:"startTs,omitempty"`
	EndTs         int32  `protobuf:"varint,2,opt,name=endTs" json:"endTs,omitempty"`
	ComputeMethod string `protobuf:"bytes,3,opt,name=computeMethod" json:"computeMethod,omitempty"`
	Endpoint      string `protobuf:"bytes,4,opt,name=endpoint" json:"endpoint,omitempty"`
	Counter       string `protobuf:"bytes,5,opt,name=counter" json:"counter,omitempty"`
}

func (m *QueryInput) Reset()                    { *m = QueryInput{} }
func (m *QueryInput) String() string            { return proto.CompactTextString(m) }
func (*QueryInput) ProtoMessage()               {}
func (*QueryInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// The response message from server
type QueryReply struct {
	Result string `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
}

func (m *QueryReply) Reset()                    { *m = QueryReply{} }
func (m *QueryReply) String() string            { return proto.CompactTextString(m) }
func (*QueryReply) ProtoMessage()               {}
func (*QueryReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*QueryInput)(nil), "owlapi.QueryInput")
	proto.RegisterType((*QueryReply)(nil), "owlapi.QueryReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for OwlQuery service

type OwlQueryClient interface {
	// Sends a query to server
	Query(ctx context.Context, in *QueryInput, opts ...grpc.CallOption) (*QueryReply, error)
}

type owlQueryClient struct {
	cc *grpc.ClientConn
}

func NewOwlQueryClient(cc *grpc.ClientConn) OwlQueryClient {
	return &owlQueryClient{cc}
}

func (c *owlQueryClient) Query(ctx context.Context, in *QueryInput, opts ...grpc.CallOption) (*QueryReply, error) {
	out := new(QueryReply)
	err := grpc.Invoke(ctx, "/owlapi.OwlQuery/Query", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for OwlQuery service

type OwlQueryServer interface {
	// Sends a query to server
	Query(context.Context, *QueryInput) (*QueryReply, error)
}

func RegisterOwlQueryServer(s *grpc.Server, srv OwlQueryServer) {
	s.RegisterService(&_OwlQuery_serviceDesc, srv)
}

func _OwlQuery_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(OwlQueryServer).Query(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _OwlQuery_serviceDesc = grpc.ServiceDesc{
	ServiceName: "owlapi.OwlQuery",
	HandlerType: (*OwlQueryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Query",
			Handler:    _OwlQuery_Query_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x92, 0x2e, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0xcf, 0x2f, 0xcf, 0x29, 0x2c, 0x4d, 0x2d, 0xaa, 0x04, 0x31, 0x12, 0x0b, 0x32, 0xf5,
	0xc0, 0xa2, 0x42, 0x6c, 0x10, 0x9e, 0xd2, 0x0c, 0x46, 0x2e, 0xae, 0x40, 0x90, 0xb4, 0x67, 0x5e,
	0x41, 0x69, 0x89, 0x90, 0x04, 0x17, 0x7b, 0x71, 0x49, 0x62, 0x51, 0x49, 0x48, 0xb1, 0x04, 0xa3,
	0x02, 0xa3, 0x06, 0x6b, 0x10, 0x8c, 0x2b, 0x24, 0xc2, 0xc5, 0x9a, 0x9a, 0x97, 0x02, 0x14, 0x67,
	0x02, 0x8b, 0x43, 0x38, 0x42, 0x2a, 0x5c, 0xbc, 0xc9, 0xf9, 0xb9, 0x40, 0x9d, 0xa9, 0xbe, 0xa9,
	0x25, 0x19, 0xf9, 0x29, 0x12, 0xcc, 0x40, 0x59, 0xce, 0x20, 0x54, 0x41, 0x21, 0x29, 0x2e, 0x0e,
	0xa0, 0xf2, 0x82, 0xfc, 0xcc, 0xbc, 0x12, 0x09, 0x16, 0xb0, 0x02, 0x38, 0x1f, 0x64, 0x63, 0x72,
	0x7e, 0x69, 0x5e, 0x49, 0x6a, 0x91, 0x04, 0x2b, 0x58, 0x0a, 0xc6, 0x55, 0x52, 0x81, 0xba, 0x2c,
	0x28, 0xb5, 0x20, 0xa7, 0x52, 0x48, 0x8c, 0x8b, 0xad, 0x28, 0xb5, 0xb8, 0x34, 0xa7, 0x04, 0xec,
	0x30, 0xce, 0x20, 0x28, 0xcf, 0xc8, 0x96, 0x8b, 0xc3, 0xbf, 0x3c, 0x07, 0xac, 0x50, 0xc8, 0x90,
	0x8b, 0x15, 0xc2, 0x10, 0xd2, 0x83, 0x7a, 0x16, 0xe1, 0x35, 0x29, 0x54, 0x31, 0xb0, 0xa1, 0x4a,
	0x0c, 0x49, 0x6c, 0xe0, 0xe0, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x60, 0x69, 0xe5, 0xe7,
	0x2d, 0x01, 0x00, 0x00,
}
